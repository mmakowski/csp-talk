
datatype ClusterId = ld | ny
MaxMessages = 100
Message = {1..MaxMessages}

channel comeOnline, goOffline : ClusterId
channel send, receive, write : ClusterId . Message


Cluster(i) = 
  let
    Online = 
      goOffline!i -> Offline
      |~|
      receive!i?m -> Writing(m)

    Writing(m) =
      goOffline!i -> Offline 
      |~| 
      write!i!m -> Online

    Offline = comeOnline!i -> Online
  within
    Online

MultiClusterWriter(cluster1, cluster2, messages) = 
  let
    Write(ms) =
      if ms == <> then STOP
      else Send(cluster1, head(ms)) ; Send(cluster2, head(ms)) ; Write(tail(ms))

    Send(cluster, m) =
      send!cluster!m -> SKIP
  within
    Write(messages)

NetworkLink(c) = send!c?m -> receive!c!m -> NetworkLink(c)

Clusters = ||| i: ClusterId @ Cluster(i)

NetworkLinks = ||| i: ClusterId @ NetworkLink(i)

System(messages) = (Clusters [|{|receive|}|] NetworkLinks) [|{|send|}|] MultiClusterWriter(ld, ny, messages)

MessagesWritten(cluster, messages) =
  messages != <> & write!cluster!head(messages) -> MessagesWritten(cluster, tail(messages))

msgs = <1,2,3,4,5>

assert MessagesWritten(ny, msgs) [T= System(msgs) \ diff(Events, {| write.ny |})
